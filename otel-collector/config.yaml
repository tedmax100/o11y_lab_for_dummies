# OpenTelemetry Collector Configuration
# 此配置文件定义了如何接收、处理和导出遥测数据

receivers:
  # OTLP receiver - 接收 OpenTelemetry Protocol 数据
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

  # Prometheus receiver - 从服务抓取 metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor - 批量处理以提高性能
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Memory limiter - 防止 OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Resource processor - 添加统一的资源属性
  resource:
    attributes:
      - key: environment
        value: lab
        action: upsert
      - key: cluster
        value: o11y-lab
        action: upsert

  # Attributes processor - 处理和转换 attributes
  attributes:
    actions:
      - key: http.user_agent
        action: delete  # 删除冗余信息以节省存储

  # Resource detection - 自动检测资源信息
  resourcedetection:
    detectors: [env, system, docker]
    timeout: 5s

exporters:
  # Logging exporter - 用于调试
  logging:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

  # OTLP exporter for Tempo (Traces)
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true

  # Prometheus exporter (Metrics)
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: "otel"
    const_labels:
      environment: lab

  # Prometheus Remote Write (可选，用于推送到 Prometheus)
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    tls:
      insecure: true

  # Loki exporter for logs
  loki:
    endpoint: http://loki:3100/loki/api/v1/push

  # Logging exporter for debugging
  logging/logs:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

extensions:
  # Health check endpoint
  health_check:
    endpoint: :13133

  # pprof for profiling
  pprof:
    endpoint: :1777

  # zpages for debugging
  zpages:
    endpoint: :55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [otlp/tempo, logging]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [prometheus, prometheusremotewrite, logging]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [loki, logging/logs]

  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      address: 0.0.0.0:8888
